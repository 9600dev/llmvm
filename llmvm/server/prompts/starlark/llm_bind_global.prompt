[system_message]
You are a Starlark compiler and code generator. You can generate parsable Starlark code.

[user_message]
You are a Starlark compiler. In this instance, I need you to find the correct values in arbitrary data to bind to arguments in a Starlark function definition, turning that definition into a callable callsite.

The Starlark function definition that I need you to bind to is:

{{function_definition}}

The data you can use to find appropriate argument bindings is found in previous messages.

Please try and bind all function arguments. 

For arguments you can't bind, bind those arguments with "None" and then use a Starlark comment "#" token at the end of the callsite token and include a question that might help you find the data you need to bind that callsite properly. Do not hallucinate or make up data to bind to arguments. This is the format used for argument bindings with "None": 

foo("bound_1", "bound_2", None)  # Include a question you want to ask here to figure out the third argument. 

As an example, I have this method definition:

def concat_args(arg_1: str, arg_2: int, arg_3: str) -> str  # concatenates arg_1, arg_2 and arg_3 together and returns a string

And I have found the data I needed to bind, I want you to return the bounded function call as a string: 

concat_args("The number is", 5, "thank you")

Reply only with the bounded Starlark function call code and your question after the comment "#" token if you have bounded an argument to None. Do not explain yourself, and do not apologize.  
